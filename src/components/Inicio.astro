---
const { id } = Astro.props;
import Social from "./component/social.astro";
---

<section
  id={id}
  class="relative h-screen flex flex-col bg-[url('../assets/fondo1.webp')] bg-repeat bg-cover bg-center object-cover dark:bg-[url('../assets/fondo.webp')]"
>
  <!-- Capa de degradado -->
  <div
    class="absolute bottom-0 left-0 w-full h-1/3 bg-gradient-to-b from-transparent to-[#f4f4f4] dark:to-[#001320] -z-10"
  >
  </div>

  <header
    class="py-4 px-6 flex justify-between min-md:justify-around items-center"
  >
    <!-- Logo reducido -->
    <div class="font-bold text-xl text-[#525d86] dark:text-white">
      <a href="/" aria-label="Ir a la página principal">
        <img
          src="/src/assets/logo.webp"
          alt="Logo"
          class="w-14 h-14 rounded-full"
        />
      </a>
    </div>

    <nav>
      <div class="flex items-center gap-4 relative">
        <!-- Botón de idioma -->
        <button
          id="language-toggle"
          aria-label="Cambiar idioma"
          class="focus:outline-none"
        >
          <img
            id="language-image"
            src="https://cdn-icons-png.flaticon.com/512/330/330557.png "
            alt="Idioma actual: Español"
            class="w-10 h-10 rounded-full"
          />
        </button>

        <!-- Botón de modo oscuro -->
        <button
          id="dark-toggle"
          aria-label="Alternar modo oscuro"
          class="bg-gray-800 text-white rounded-full w-10 h-10 flex items-center justify-center focus:outline-none"
        >
          <i id="dark-icon" class="fa-solid fa-moon"></i>
          <span class="sr-only">Alternar modo oscuro</span>
        </button>
      </div>
    </nav>
  </header>

  <main class="flex-grow flex justify-center items-center px-8">
    <article class="max-w-2xl text-left">
      <h2 class="text-gray-700 dark:text-[#ccd6f6] mb-2 min-md:text-2xl">
        ¡Hola! Mucho gusto. Me llamo
      </h2>
      <h1
        class="min-sm:text-7xl font-bold mb-4 max-[376px]:text-4xl text-5xl bg-gradient-to-r from-[#2c3354] via-[#525d86] to-[#3e56ab] bg-clip-text text-transparent dark:text-[#ffffff]"
      >
        Jesús Rivera
      </h1>
      <div>
        <div class="my-6 text-2xl overflow-hidden">
          <h3
            id="animated-text"
            class="text-[#1e2231] dark:text-[#adb1bf] font-bold whitespace-nowrap border-r-2 animate-typing max-w-full text-ellipsis min-sm:text-4xl"
          >
          </h3>
        </div>
      </div>

      <div
        class="items-center gap-2 mb-6 rounded-full border border-[#d3d3d3] inline-flex px-3 py-2"
      >
        <!-- Punto verde animado -->
        <span class="relative flex h-3 w-3">
          <span
            class="animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75"
          ></span>
          <span
            class="relative inline-flex rounded-full h-3 w-3 bg-green-500 border border-white"
          ></span>
        </span>
        <p
          class="text-[#1e2231] font-medium text-xs sm:text-base px-2 dark:text-white"
        >
          Disponible para cualquier desafío
        </p>
      </div>

      <div class="flex flex-wrap items-center space-x-4">
        <a
          href="/cv-jesus-rivera.pdf"
          download="JesusRivera_CV"
          class="bg-[#1e2231] text-white max-sm:py-2 max-sm:px-7 py-3 px-8 rounded-full hover:bg-[#525d86]"
        >
          <i class="fa-solid fa-download md:pr-3"></i>
          Descargar CV
        </a>
        <div class="flex space-x-2 my-4">
          <!-- Email -->
          <Social
            href="mailto:jr860086@gmail.com"
            ariaLabel="email"
            iconClass="fa-solid fa-envelope"
            textColor="#000000"
          />

          <!-- Github -->
          <Social
            href="https://github.com/JesusRivX"
            ariaLabel="github"
            iconClass="fa-brands fa-github"
            textColor="#000000"
          />

          <!-- Linkedin -->
          <Social
            href="https://www.linkedin.com/in/jes%C3%BAs-rivera-04058620a/"
            ariaLabel="linkedin"
            iconClass="fa-brands fa-linkedin"
            textColor="#0b6aca"
          />
        </div>
      </div>
    </article>
  </main>
</section>

<!-- Degradado entre secciones -->
<div
  class="h-32 w-full bg-gradient-to-b from-[#f4f4f4] to-[#ffffff] dark:from-[#001320] dark:to-[#0a192f]"
>
</div>

<style>
  @keyframes typing {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }
  @keyframes blink {
    50% {
      border-color: transparent;
    }
  }

  .animate-typing {
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;
    animation:
      typing 2s steps(30, end),
      blink 0.75s step-end infinite;
  }
</style>

<script>
  const texts: string[] = ["Ingeniero de Software", "Desarrollador Fullstack"];
  const textElement = document.getElementById("animated-text") as HTMLElement;

  let index: number = 0;

  function animateText(): void {
    if (!textElement) return;

    textElement.classList.remove("animate-typing");
    void textElement.offsetWidth; // Forzar reflow para reiniciar la animación
    textElement.textContent = texts[index];
    textElement.classList.add("animate-typing");

    index = (index + 1) % texts.length;
  }

  // Inicializar al cargar
  animateText();

  // Cambiar cada 4 segundos
  setInterval(animateText, 4000);
</script>

<script>
  // Verificar el estado almacenado en localStorage al cargar la página
  const isDarkMode = localStorage.getItem("darkMode") === "enabled";

  // Seleccionar elementos del DOM
  const darkToggle = document.querySelector("#dark-toggle");
  const darkIcon = document.querySelector("#dark-icon");

  // Función para actualizar el estado del modo oscuro
  function updateDarkModeState(enabled) {
    if (enabled) {
      document.body.classList.add("dark");
      darkIcon.classList.remove("fa-moon");
      darkIcon.classList.add("fa-sun");
      localStorage.setItem("darkMode", "enabled");
    } else {
      document.body.classList.remove("dark");
      darkIcon.classList.remove("fa-sun");
      darkIcon.classList.add("fa-moon");
      localStorage.setItem("darkMode", "disabled");
    }
  }

  // Configurar el estado inicial según el valor de localStorage
  updateDarkModeState(isDarkMode);

  // Añadir el evento de clic al botón de alternar modo oscuro
  darkToggle?.addEventListener("click", () => {
    const isCurrentlyDark = document.body.classList.contains("dark");
    updateDarkModeState(!isCurrentlyDark);
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const languageToggle = document.getElementById("language-toggle");
    const languageImage = document.getElementById("language-image");

    // Rutas de las imágenes para español e inglés
    const languages = {
      es: {
        img: "https://cdn-icons-png.flaticon.com/512/330/330557.png ",
        alt: "Idioma actual: Español",
      },
      en: {
        img: "https://cdn-icons-png.flaticon.com/512/330/330425.png ",
        alt: "Current language: English",
      },
    };

    // Idioma predeterminado
    const defaultLanguage = localStorage.getItem("language") || "es";
    setLanguage(defaultLanguage);

    languageToggle.addEventListener("click", () => {
      const currentLanguage = localStorage.getItem("language") || "es";
      const newLanguage = currentLanguage === "es" ? "en" : "es";
      setLanguage(newLanguage);
    });

    function setLanguage(language) {
      // Cambiar la imagen y el texto alternativo
      languageImage.src = languages[language].img;
      languageImage.alt = languages[language].alt;

      // Almacenar el idioma seleccionado en localStorage
      localStorage.setItem("language", language);

      // Aquí puedes agregar lógica adicional para traducir el contenido de la página
      console.log(`Idioma cambiado a: ${language}`);
    }
  });
</script>
